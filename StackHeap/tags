!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ClearStack	StackHeap.cpp	/^void ClearStack(StackPointer *&S)$/;"	f
DestroyStack	StackHeap.cpp	/^void DestroyStack(StackPointer *&S)$/;"	f
ElemType	StackHeap.cpp	/^typedef int ElemType;$/;"	t	file:
GetTop	StackHeap.cpp	/^int GetTop(StackPointer *S,ElemType &e)$/;"	f
InitStack	StackHeap.cpp	/^void InitStack(StackPointer *&S)$/;"	f
MAX_SIZE	StackHeap.cpp	12;"	d	file:
Pop	StackHeap.cpp	/^int Pop(StackPointer *&S,ElemType &e)$/;"	f
Push	StackHeap.cpp	/^int Push(StackPointer *&S,ElemType e)$/;"	f
StackEmpty	StackHeap.cpp	/^int StackEmpty(StackPointer *S)$/;"	f
StackFull	StackHeap.cpp	/^int StackFull(StackPointer *S)$/;"	f
StackLength	StackHeap.cpp	/^int StackLength(StackPointer *S)$/;"	f
StackPointer	StackHeap.cpp	/^typedef struct StackPointer$/;"	s	file:
StackPointer	StackHeap.cpp	/^}StackPointer;$/;"	t	typeref:struct:StackPointer	file:
base	StackHeap.cpp	/^	ElemType *base;$/;"	m	struct:StackPointer	file:
main	StackHeap.cpp	/^int main()$/;"	f
top	StackHeap.cpp	/^	ElemType *top;$/;"	m	struct:StackPointer	file:
